[package]
name = "websocat"
version = "1.13.0"
authors = ["Vitaly \"_Vi\" Shukela <vi0oss@gmail.com>"]
license = "MIT"
repository = "https://github.com/vi/websocat"
description = "Command-line client for web sockets, like netcat/curl/socat for ws://."
keywords = ["WebSocket", "socat", "rfc6455", "netcat", "cli"]
include = ["src","Cargo.toml","LICENSE","README.md"]
readme = "README.md"
edition = "2018"
#msrv = "1.48.0"

[package.metadata.deb]
section = "utility"
extended-description = """\
A tool allows you to interconnect two specifiers, like in socat, \
but with Websocket and some other additional functions."""
features = ["ssl", "workaround1", "seqpacket", "unix_stdio"]
#depends = "$auto"
depends = "libssl1.1, libc6 (>= 2.19), libgcc1 (>= 1:4.9.0)"


[dependencies]
websocket = { version="0.27.1", default-features = false, features=["async"] }
websocket-base = { version="0.26.5", default-features = false, features=["async"] }
http-bytes = {version = "0.1.0"}
env_logger = { version = "0.11.3", default-features = false }
log = {version="0.4.1", default-features = false, features=["release_max_level_debug"]}
futures = {version = "0.1.17" }
tokio-io = "0.1.5"
tokio-stdin-stdout = "0.1.5"
structopt = { version = "=0.2.16", default-features = false }
structopt-derive = { version = "=0.2.16", default-features = false }
tokio-process = { version = "0.2.3", optional = true }
slab_typesafe = "0.1"
hyper="0.10.13"
url="1.7.1"
openssl-probe = { version = "0.1.2", optional = true }
smart-default = "0.3.0"
tokio-tls = {version = "0.2.0", optional = true}
native-tls = {version = "0.2.1", optional = true}
readwrite = {version = "0.1.1", optional = true, features = ["tokio"]}
derivative="1.0.0"
tokio-codec = "0.1.1"
tokio-tcp = "0.1.2"
tokio-udp = "0.1.3"
tokio-reactor = "0.1.7"
tokio = "0.1.11"
tokio-current-thread = "0.1.4"
tk-listen = "0.2.1"
tokio-timer = "0.2.0"
tempfile = "3.0.8"
net2 = "0.2.33"
anymap = "0.12.1"
base64 = "0.10"
atty = "0.2.14"
#anymap = { path = "/mnt/src/git/anymap"}
hex = "0.4.2"
chacha20poly1305 = {version="0.9.0",optional=true}
rand = { version = "0.8.4", optional = false }
argon2 = { version = "0.4.0", optional = true }
prometheus = { version = "0.13.0", optional = true, default-features = false }
prometheus-metric-storage = { version = "0.5.0", optional = true }
flate2 = {version = "1", optional = true}
libloading = {version="0.7.3", optional = true}
wasmtime = { version = "1.0.0", default-features = false, features = ["memory-init-cow"], optional = true }

# Rust 1.30.1 compat:
#cfg-if="=0.1.9"
#unicode-width="=0.1.5"
#tokio-reactor = "=0.1.9"
#cc="=1.0.41"


[target.'cfg(unix)'.dependencies]
tokio-file-unix = "0.5.1"
tokio-signal = { version = "0.2.7", optional = true }
tokio-uds = "0.2.3"
libc = { version = "0.2" }

[target.'cfg(windows)'.dependencies]
tokio-named-pipes = {version="0.1.0", optional=true}

[features]
default = ["signal_handler", "tokio-process", "unix_stdio", "windows_named_pipes", "ssl", "compression"]
unix_stdio = []
ssl = ["websocket/async-ssl", "tokio-tls", "native-tls", "readwrite", "openssl-sys"]
signal_handler = ["tokio-signal"]
workaround1=[]
seqpacket=[]
windows_named_pipes=["tokio-named-pipes"]
vendored_openssl = ["openssl-sys/vendored"]
crypto_peer = ["chacha20poly1305","argon2"]
prometheus_peer=["prometheus","prometheus-metric-storage"]
compression=["flate2"]
native_plugins=["libloading"]
wasm_plugins=["wasmtime"]
wasm_compiler=["wasmtime/cranelift", "wasmtime/parallel-compilation"]

[target.'arm-linux-androideabi'.dependencies]
openssl-sys = { version="0.9", features=[], optional=true }


#[patch."crates-io"]
#"tokio-process:0.1.6" = {path="/mnt/src/git/tokio-process"}
#"tokio-core:0.1.17" = {path="/mnt/src/git/tokio-core"}
#"websocket" = {path="/home/vi/src/rust-websocket"}
#"websocket-base" = {path="/home/vi/src/rust-websocket/websocket-base"}



[profile.release]
opt-level = "s"
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
panic = 'abort'
